apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "horo-storage.fullname" . }}-api
  labels:
    {{- include "horo-storage.labels" . | nindent 4 }}
    app: api
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "horo-storage.selectorLabels" . | nindent 6 }}
      app: api
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "horo-storage.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        app: api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "horo-storage.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: migrate
          image: "{{ .Values.image.api.repository }}:{{ .Values.image.api.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.api.pullPolicy }}
          env:
            - name: DATABASE_URL
              value: "{{.Values.database.type}}://{{.Values.database.user}}:{{.Values.database.password}}@{{.Values.database.host}}/{{.Values.database.database}}"
            - name: USERNAME
              value: "{{.Values.storage.user}}"
            - name: PASSWORD
              value: "{{.Values.storage.password}}" 
            - name: TZ
              value: Asia/Shanghai
          command: ["./bin/migration"]
      containers:
        - name: {{ .Chart.Name }}-api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.api.repository }}:{{ .Values.image.api.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.api.pullPolicy }}
          env:
            - name: DATABASE_URL
              value: "{{.Values.database.type}}://{{.Values.database.user}}:{{.Values.database.password}}@{{.Values.database.host}}/{{.Values.database.database}}"
            - name: TOKEN_EXPIRE_SECONDS
              value: "{{.Values.jwt.expire}}"
            - name: LOG4RS_CONFIG
              value: /app/config/log4rs.yaml
            - name: TZ
              value: Asia/Shanghai
          volumeMounts:
            - name: log4rs-config
              mountPath: /app/config
          ports:
            - name: http
              containerPort: {{ .Values.service.api.targetPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe.api | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe.api | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: log4rs-config
          configMap:
            name: {{ .Release.Name }}-log4rs
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
